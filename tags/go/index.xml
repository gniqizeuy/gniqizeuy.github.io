<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on gniqizeuy blog</title>
    <link>https://gniqizeuy.github.io/tags/go/</link>
    <description>Recent content in go on gniqizeuy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://gniqizeuy.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>go error</title>
      <link>https://gniqizeuy.github.io/items/go-errror/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gniqizeuy.github.io/items/go-errror/</guid>
      <description>error 接口 go中 error 只是一个接口类型，不包含返回错误消息的方法
type error interface { Error() string } errors package errors 包中 errors.go 源码如下
package errors // New returns an error that formats as the given text. // Each call to New returns a distinct error value even if the text is identical. func New(text string) error { return &amp;amp;errorString{text} } // errorString is a trivial implementation of error. type errorString struct { s string } func (e *errorString) Error() string { return e.</description>
    </item>
    
  </channel>
</rss>
