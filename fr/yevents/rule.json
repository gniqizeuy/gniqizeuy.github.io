{"content": "<p>Parfois, les pages sont perçues comme moins réactives à cause des trop nombreux gestionnaires d&rsquo;événements attachés aux différents éléments de l&rsquo;arborescence DOM et qui sont ensuite exécutés trop souvent. C&rsquo;est pourquoi l&rsquo;utilisation d&rsquo;une <em>délégation d&rsquo;événement</em> est une bonne approche. Si vous avez 10 boutons à l&rsquo;intérieur d&rsquo;un <code>div</code>, attachez un seul gestionnaire d&rsquo;événements sur le div au lieu d&rsquo;un gestionnaire pour chaque bouton. Les événements vont survenir afin que vous soyez en mesure de capturer l&rsquo;événement et déterminer de quel bouton il provient.</p><p>Vous n&rsquo;avez pas besoin d&rsquo;attendre l&rsquo;événement onload pour commencer à faire quelque chose avec l&rsquo;arborescence DOM. Souvent, tout ce dont vous avez besoin est que l&rsquo;élément auquel vous souhaitez accéder soit disponible dans l&rsquo;arbre. Vous n&rsquo;avez pas à attendre que toutes les images soient téléchargées. <code>DOMContentLoaded</code> est l&rsquo;événement que vous pouvez envisager d&rsquo;utiliser à la place de onload, mais jusqu&rsquo;à ce qu&rsquo;il soit disponible dans tous les navigateurs, vous pouvez utiliser l&rsquo;utilitaire <a href=\"http://developer.yahoo.com/yui/event/\">YUI Event</a> qui a une méthode <code>onAvailable</code>.</p><p>Consultez le YUI theatre&rsquo;s <a href=\"http://yuiblog.com/blog/2007/12/20/video-lecomte/\">&ldquo;High Performance Ajax Applications&rdquo;</a> de Julien Lecomte pour plus d&rsquo;informations.</p>", "tags": ["javascript"], "id": "yevents", "title": "Développer des gestionnaires d’événements intelligents"}